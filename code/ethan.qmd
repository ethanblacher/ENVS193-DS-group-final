---
title: "ethan"
format: html
editor: visual
---

```{r Install_Packages}
# should haves (from last week)
library(tidyverse)
library(here)
library(janitor)
library(ggeffects)
library(performance)
library(naniar) # or equivalent
library(flextable) # or equivalent
library(car)
library(broom)
# would be nice to have
library(corrplot)
library(AICcmodavg)
library(GGally)
library(MuMIn)
library(MASS) # have to read this in before tidyverse 
library(lme4)
library(glmmTMB) # ok if you don't have this - just comment it out

# diagnostics and model info
library(DHARMa)
library(lmtest)
library(skimr)
```

```{r Read_Data}
flower <- read_csv(here("data", "prob2", "shrubstudy_seed_ctwt.ms.data.csv"))
flower <- flower %>% 
  drop_na(nr_seeds)
```

```{r exploring_data}
ggplot(data= flower, aes(x=nr_seeds))+
  geom_histogram(bins=13)
#not normal
``
```

```{r missing_data_viz}
gg_miss_var(flower)
```

```{r}
flower_subset <- flower %>% 
  #create a new dataset of flower, which drops the missing data from nr_seeds because its pertinent to our study
  drop_na(nr_seeds)%>%
  #removed a few columns that were not relevant to the experiment for our purposes, mainly just ids
  clean_names()%>%
  mutate(date_collected = NULL, shrub_num = NULL, aspect= NULL, tag_num= NULL, plant_nr = NULL, dist_fr_shr = NULL, nr_infl_coll = NULL, wt_seeds_mg = NULL, notes = NULL)

```

```{r skim-dataset}
skim(flower_subset)
```

```{r pairs-plot}
#| fig.width: 12
#| fig.height: 12
#| out.width: 90%
#| fig.align: center
#flower_subset %>%
  #take out site
# select(!species)%>%
ggpairs(flower_subset)
```

```{r models}
# linear model, we know this is wrong
flowermod1 <- lm(nr_seeds~treatment+species+total_nr_infl, data = flower)

# generalized linear model with Poisson distribution
flowermod2 <- glm(nr_seeds~treatment+species+total_nr_infl, data = flower, family="poisson")

# generalized linear model with negative binomial distribution
flowermod3 <- glm.nb(nr_seeds~treatment+species+total_nr_infl, data = flower)

# generalized linear model with Poisson distribution and random effect of site
#flowermod4 <- glmer(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower, family = "poisson")

#flowermod4.a <- glmmTMB(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower, family = "poisson")

# generalized linear model with negative binomial distribution and random effect of site
#flowermod5 <- glmer.nb(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower)

#flowermod5.a <- glmmTMB(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower, family = "nbinom2")
```

```{r model-residuals}
#| fig.height: 6
#| fig.width: 8
#| fig.align: center

# check diagnostics
simulateResiduals(flowermod1, plot=TRUE)
simulateResiduals(flowermod2, plot=TRUE)
simulateResiduals(flowermod2.a, plot =TRUE)
simulateResiduals(flowermod3, plot=TRUE)
simulateResiduals(flowermod3.a, plot =TRUE)
simulateResiduals(flowermod4, plot=TRUE)
simulateResiduals(flowermod4.a, plot=TRUE)
simulateResiduals(flowermod5, plot=TRUE)
simulateResiduals(flowermod5.a, plot=TRUE)
```

```{r choosing-model}
model.sel(flowermod1,flowermod2, flowermod3, flowermod4, flowermod5)

```

```{r summaries}
# model object
flowermod3

# summary 
summary(flowermod3)

# confidence intervals
confint(flowermod3)

# adjusted R2
r.squaredGLMM(flowermod3)

```

```{r}
car::vif(flowermod3)
```

```{r}
# model object in table
flowermod3%>%
  as_flextable()
```

```{r null-model}

null_flower <- glm.nb(nr_seeds~1, data = flower)

simulateResiduals(null_flower, plot= TRUE)

```

```{r AICc-values-for-null-and-mod3}
model.sel(flowermod3, null_flower)
```

```{r create-simple-models}
flowermod_treatment <- glm.nb(nr_seeds~treatment, data = flower)
flowermod_species <- glm.nb(nr_seeds~species, data = flower)
flowermod_infl <- glm.nb(nr_seeds~total_nr_infl, data = flower)

simulateResiduals(flowermod_treatment, plot= TRUE)
simulateResiduals(flowermod_species, plot= TRUE)
simulateResiduals(flowermod_infl, plot= TRUE)

```

```{r AICc-model_mod3_and_simple}

model.sel(flowermod3, flowermod_infl, flowermod_species, flowermod_treatment)
```

```{r visualization}
#| fig.width: 12
#| fig.height: 10
#| out.width: 90%
#| fig.align: center


plot(ggpredict(flowermod3, terms = c("treatment", "total_nr_infl", "species")), add.data=TRUE)
facet_wrap(~species) 
```

```{r}
predictions <- ggpredict(flowermod3, terms = c("treatment", "total_nr_infl", "species")) %>% 
  rename(treatment = group,
         species = facet)

predictions

plot(predictions)

ggplot(flower, aes(x = treatment, y = nr_seeds, fill = treatment)) +
  geom_point(aes(x=treatment, y=total_nr_infl, color = total_nr_infl), alpha = 0.5) +
  facet_wrap(~species) +
  geom_line(data = predictions, aes(x = x, y = predicted, color = treatment)) +
  geom_ribbon(data = predictions, aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high, fill = treatment), alpha = 0.2) +
  scale_fill_manual(values = c("control" = "blue", "shrub" = "orange")) +
  scale_color_manual(values = c("control" = "blue", "shrub" = "orange")) +
  theme_bw() +
  facet_wrap(~species, scales = "free_y") +
  labs(fill = "treatment", color = "treatment")
```

```{r}
ggplot(data=flowermod3, aes(x=treatment, y=nr_seeds, fill=predicted))+
  geom_boxplot(position = position_dodge(width=.8), color ="black")+
  labs(x="Species", y =" Seed Count", title = "distribution fo seed count by species and treatment")+
  theme_minimal()+
  facet_wrap(~species)
```

```{r}

library(ggplot2)

# Fit the linear model
model <- lm(nr_seeds ~ total_nr_infl + species + treatment, data = flower)

# Make predictions using the model
flower$predicted <- predict(model)

# Create a scatter plot or line plot
ggplot(flower, aes(x = predicted, y = nr_seeds)) +
  geom_point(color = "blue", alpha = 0.5) +  # Actual observations
  geom_abline(color = "red") +  # 45-degree line of perfect predictions
  labs(x = "Predicted", y = "Actual", title = "Predicted vs. Actual") +
  theme_minimal()
```

The blue points in the graph represent the actual observed values of the response variable (nr_seeds), while the red line indicates the line of perfect predictions (where predicted values would exactly match actual values). The closer the blue points align to the red line, the stronger the agreement between the predicted and actual values.

```{r}
# Calculate performance metrics
predicted <- flowermod3$fitted.values
actual <- flower$nr_seeds

MAE <- mean(abs(predicted - actual))
MSE <- mean((predicted - actual)^2)
RMSE <- sqrt(MSE)
R_squared <- summary(flowermod3)$r.squared
print(MAE)
print(MSE)
print(RMSE)
print(R_squared)
```

```{r}
# One-sample t-test
t.test(predicted - actual)

# Wilcoxon signed-rank test
wilcox.test(predicted, actual, paired = TRUE)

```

```{r}
flower$residuals <- resid(flowermod3)

# Create a scatter plot of residuals
ggplot(flower, aes(x = predicted, y = residuals)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(x = "Predicted", y = "Residuals", title = "Residual Plot") +
  theme_minimal()

```

```{r}

residuals <- resid(flowermod3)
mean_residual <- mean(residuals)
sd_residual <- sd(residuals)

print(mean_residual)
print(sd_residual)

shapiro.test(residuals)
# Breusch-Pagan test for heteroscedasticity
bptest(flowermod3)


```

ANOVA Table

```{r}
summary(flowermod3)
tidy(flowermod3, conf.int = TRUE, conf.level = .95) 

```
