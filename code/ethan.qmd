---
title: "ethan"
format: html
editor: visual
---

```{r Install_Packages}
# should haves (from last week)
library(tidyverse)
library(here)
library(janitor)
library(ggeffects)
library(performance)
library(naniar) # or equivalent
library(flextable) # or equivalent
library(car)
library(broom)
# would be nice to have
library(corrplot)
library(AICcmodavg)
library(GGally)
library(MuMIn)
library(MASS) # have to read this in before tidyverse 
library(lme4)
library(glmmTMB) # ok if you don't have this - just comment it out

# diagnostics and model info
library(DHARMa)
library(lmtest)
library(skimr)
```

```{r Read_Data}
flower <- read_csv(here("data", "prob2", "shrubstudy_seed_ctwt.ms.data.csv"))
clean_names(flower)

```

```{r exploring_data}
ggplot(data= flower, aes(x=nr_seeds))+
  geom_histogram(bins=13)
#not normal
``
```

```{r missing_data_viz}
gg_miss_var(flower)
```

```{r}
flower_subset <- flower %>% 
  #create a new dataset of flower, which drops the missing data from nr_seeds because its pertinent to our study
  drop_na(nr_seeds)%>%
  #removed a few columns that were not relevant to the experiment for our purposes, mainly just ids
  clean_names()%>%
  mutate(date_collected = NULL, shrub_num = NULL, aspect= NULL, tag_num= NULL, plant_nr = NULL, dist_fr_shr = NULL, nr_infl_coll = NULL, wt_seeds_mg = NULL, notes = NULL)

```

```{r skim-dataset}
skim(flower_subset)
```

```{r pairs-plot}
#| fig.width: 12
#| fig.height: 12
#| out.width: 90%
#| fig.align: center
#flower_subset %>%
  #take out site
# select(!species)%>%
ggpairs(flower_subset)
```

```{r models}
# linear model, we know this is wrong
flowermod1 <- lm(nr_seeds~treatment+species+total_nr_infl, data = flower)

# generalized linear model with Poisson distribution
flowermod2 <- glm(nr_seeds~treatment+species+total_nr_infl, data = flower, family="poisson")

# generalized linear model with negative binomial distribution
flowermod3 <- glm.nb(nr_seeds~treatment+species+total_nr_infl, data = flower)

# generalized linear model with Poisson distribution and random effect of site
flowermod4 <- glmer(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower, family = "poisson")

flowermod4.a <- glmmTMB(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower, family = "poisson")

# generalized linear model with negative binomial distribution and random effect of site
flowermod5 <- glmer.nb(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower)

flowermod5.a <- glmmTMB(nr_seeds~treatment+species+total_nr_infl + (1|shrub_num), data = flower, family = "nbinom2")
```

```{r model-residuals}
#| fig.height: 6
#| fig.width: 8
#| fig.align: center

# check diagnostics
simulateResiduals(flowermod1, plot=TRUE)
simulateResiduals(flowermod2, plot=TRUE)
simulateResiduals(flowermod2.a, plot =TRUE)
simulateResiduals(flowermod3, plot=TRUE)
simulateResiduals(flowermod3.a, plot =TRUE)
simulateResiduals(flowermod4, plot=TRUE)
simulateResiduals(flowermod4.a, plot=TRUE)
simulateResiduals(flowermod5, plot=TRUE)
simulateResiduals(flowermod5.a, plot=TRUE)
```

```{r choosing-model}
model.sel(flowermod1,flowermod2, flowermod3, flowermod4, flowermod5)

```

```{r summaries}
# model object
flowermod3

# summary 
summary(flowermod3)

# confidence intervals
confint(flowermod3)

# adjusted R2
r.squaredGLMM(flowermod3)

```

```{r}
# model object in table
flowermod3%>%
  as_flextable()
#alternative to above ^
tidy(flowermod3)%>%
flextable()
```

```{r null-model}

null_flower <- glm.nb(nr_seeds~1, data = flower)

simulateResiduals(null_flower, plot= TRUE)

```

```{r AICc-values-for-null-and-mod3}
model.sel(flowermod3, null_flower)
```

```{r create-simple-models}
flowermod_treatment <- glm.nb(nr_seeds~treatment, data = flower)
flowermod_species <- glm.nb(nr_seeds~species, data = flower)
flowermod_infl <- glm.nb(nr_seeds~total_nr_infl, data = flower)

simulateResiduals(flowermod_treatment, plot= TRUE)
simulateResiduals(flowermod_species, plot= TRUE)
simulateResiduals(flowermod_infl, plot= TRUE)

```

```{r AICc-model_mod3_and_simple}

model.sel(flowermod3, flowermod_infl, flowermod_species, flowermod_treatment)
```

```{r visualization}
#| fig.width: 12
#| fig.height: 10
#| out.width: 90%
#| fig.align: center


plot(ggpredict(flowermod3, terms = c("treatment", "total_nr_infl", "species")), add.data=TRUE)
```

```{r}
predictions <- ggpredict(flowermod3, terms = c("treatment", "total_nr_infl", "species")) %>% 
  rename(treatment = group,
         species = facet)

predictions

plot(predictions)

ggplot(flower, aes(x = treatment, y = nr_seeds, fill = treatment)) +
  geom_point(aes(x=treatment, y=total_nr_infl, color = total_nr_infl), alpha = 0.5) +
  facet_wrap(~species) +
  geom_line(data = predictions, aes(x = x, y = predicted, color = treatment)) +
  geom_ribbon(data = predictions, aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high, fill = treatment), alpha = 0.2) +
  scale_fill_manual(values = c("control" = "blue", "shrub" = "orange")) +
  scale_color_manual(values = c("control" = "blue", "shrub" = "orange")) +
  theme_bw() +
  facet_wrap(~species, scales = "free_y") +
  labs(fill = "treatment", color = "treatment")
```

```{r}
predicted_counts <- predict(flowermod3, type ="response")
# Plot predicted vs actual
plot(predicted_counts, flower$nr_seeds, xlab = "Predicted Counts", ylab = "Actual Counts", main = "Predicted vs Actual")
abline(0, 1, col = "red")  # Add diagonal line for reference
```

```{r}
ggplot(data=flower, aes(x=treatment, y=total_nr_infl, fill= nr_seeds))+
  geom_point(aes(color=nr_seeds), alpha= 0.5)+
  facet_wrap(~species, scales = "free_y")+
  geom_line(data=predictions, aes(x=x, y=predicted))
```

```{r}
predictions2 <- ggpredict(flowermod3, terms = c("total_nr_infl", "species", "treatment"))

predictions2

plot_predictions <- ggplot(data = flower, 
                           aes(x= treatment, y= nr_seeds))+
geom_point()+

geom_line(data = predictions2, aes(x=x, y=predicted), color="blue")
plot_predictions
```
